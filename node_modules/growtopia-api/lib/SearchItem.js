"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const axios_1 = require("axios");
function searchItem(itemName) {
    return __awaiter(this, void 0, void 0, function* () {
        try {
            const data = yield axios_1.default
                .get("https://growtopia.fandom.com/api.php?action=query&srlimit=20&list=search&srsearch=" +
                itemName +
                "&format=json")
                .then((res) => res.data);
            if (!data)
                return [];
            const filter = (item) => stringContains(item.title, [
                "category:",
                "update",
                "disambiguation",
                "week",
            ]) && item.title.toLowerCase().includes(itemName);
            const itemList = data.query.search;
            const items = itemList.filter(filter);
            if (!(items.length > 0))
                return [];
            const result = items.map((item) => ({
                itemName: item.title,
                url: `https://growtopia.fandom.com/wiki/${item.title.replace(/ /g, "_")}`,
            }));
            return result;
        }
        catch (error) {
            if (axios_1.default.isAxiosError(error)) {
                throw error.response;
            }
            else {
                throw error;
            }
        }
    });
}
function stringContains(string, array) {
    for (let i = 0; i < array.length; i++) {
        if (string.toLowerCase().includes(array[i]))
            return false;
    }
    return true;
}
exports.default = searchItem;
